{"version":3,"sources":["reducers/reducerIndex.js","api/api.js","components/HandleGoogleMap.js","components/HandleCityResult.js","components/HandleCitySearch.js","actions/actionIndex.js","components/App.js","index.js"],"names":["combineReducers","reducerIndex","state","arguments","length","undefined","action","type","concat","Object","toConsumableArray","payload","filter","city","id","axios","create","baseURL","GoogleApiWrapper","apiKey","props","lat","lng","console","log","react_default","a","createElement","className","dist","google","style","width","height","position","top","left","marginRight","transform","center","zoom","initialCenter","HandleCityResult","HandleSearchResult","newCity","_this","map","key","name","weather","description","main","temp","humidity","onClick","listDelete","this","React","Component","HandleCitySearch","term","onFormSubmit","e","preventDefault","fetchWeather","setState","_this2","_this$props","onSubmit","value","onChange","target","placeholder","components_HandleGoogleMap","components_HandleCityResult","connect","coord","lon","_ref","asyncToGenerator","regenerator_default","mark","_callee","dispatch","res","wrap","_context","prev","next","api","get","sent","data","stop","_x","apply","App","components_HandleCitySearch","store","createStore","applyMiddleware","thunk","ReactDOM","render","es","src_components_App","document","querySelector"],"mappings":"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","file":"static/js/main.2a7d632f.chunk.js","sourcesContent":["import { combineReducers } from \"redux\";\r\n\r\nconst reducerIndex = (state = [], action) => {\r\n  switch (action.type) {\r\n    case \"FETCH_WEATHER\":\r\n      return [...state, action.payload];\r\n    case \"LIST_DELETE\":\r\n      return [...state.filter(city => city.id !== action.payload)];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default combineReducers({\r\n  reducerIndex\r\n});\r\n","import axios from \"axios\";\r\n\r\nexport default axios.create({\r\n  baseURL: \"https://api.openweathermap.org\"\r\n});\r\n","import React from \"react\";\r\nimport { Map, GoogleApiWrapper } from \"google-maps-react\";\r\nimport \"./App.css\";\r\n\r\nconst HandleGoogleMap = props => {\r\n  const { lat, lng } = props;\r\n  const style = {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    position: \"absolute\",\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    marginRight: \"-50%\",\r\n    transform: \"translate(-50%, -50%)\"\r\n  };\r\n  console.log(lat);\r\n  console.log(lng);\r\n  return (\r\n    <div className=\"mapWrapper clearfix\">\r\n      <Map\r\n        google={props.google}\r\n        style={style}\r\n        center={{ lat: lat, lng: lng }}\r\n        zoom={12}\r\n        initialCenter={{\r\n          lat: 37.57,\r\n          lng: 126.98\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GoogleApiWrapper({\r\n  apiKey: \"AIzaSyDdqIx3DfE5UDXOnF1HIA0w5WY-40r6P8k\"\r\n})(HandleGoogleMap);\r\n","import React from \"react\";\r\n\r\nclass HandleCityResult extends React.Component {\r\n  HandleSearchResult = () => {\r\n    const { newCity } = this.props;\r\n    console.log(newCity);\r\n    return newCity.map(city => (\r\n      <div key={city.id} className=\"cityInfo\">\r\n        <div className=\"city-name\">City : {city.name}</div>\r\n        <div>Current Condition : {city.weather[0].description}</div>\r\n        <div>Temperature : {city.main.temp}Â°c</div>\r\n        <div>Humidity : {city.main.humidity}</div>\r\n        <button\r\n          onClick={() => this.props.listDelete(city.id)}\r\n          className=\"del-btn\"\r\n        >\r\n          X\r\n        </button>\r\n      </div>\r\n    ));\r\n  };\r\n\r\n  render() {\r\n    return <div> {!this.props.newCity ? null : this.HandleSearchResult()}</div>;\r\n  }\r\n}\r\n\r\nexport default HandleCityResult;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchWeather } from \"../actions/actionIndex\";\r\nimport { listDelete } from \"../actions/actionIndex\";\r\nimport HandleGoogleMap from \"./HandleGoogleMap\";\r\nimport HandleCityResult from \"./HandleCityResult\";\r\nimport \"./App.css\";\r\n\r\nclass HandleCitySearch extends React.Component {\r\n  state = {\r\n    term: \"\"\r\n  };\r\n\r\n  onFormSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.fetchWeather(this.state.term);\r\n    this.setState({\r\n      term: \"\"\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { newCity, listDelete, lat, lng } = this.props;\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.onFormSubmit}>\r\n          <h1>How's The Weather Today?</h1>\r\n          <p>\r\n            Type any name of city in English and enter to view current weather\r\n            conditons below the map.\r\n          </p>\r\n          <span>city</span>\r\n          <input\r\n            type=\"text\"\r\n            value={this.state.term}\r\n            onChange={e => this.setState({ term: e.target.value })}\r\n            placeholder=\" ex. seoul\"\r\n          />\r\n          <button className=\"search-btn\">Search</button>\r\n        </form>\r\n        <HandleGoogleMap lat={lat} lng={lng} term={this.props.term} />\r\n        <HandleCityResult newCity={newCity} listDelete={listDelete} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    newCity: state.reducerIndex,\r\n    lat:\r\n      state.reducerIndex[state.reducerIndex.length - 1] !== undefined\r\n        ? state.reducerIndex[state.reducerIndex.length - 1].coord.lat\r\n        : null,\r\n    lng:\r\n      state.reducerIndex[state.reducerIndex.length - 1] !== undefined\r\n        ? state.reducerIndex[state.reducerIndex.length - 1].coord.lon\r\n        : null\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { fetchWeather, listDelete }\r\n)(HandleCitySearch);\r\n","import api from \"../api/api\";\r\n\r\n// actions\r\n\r\nexport const fetchWeather = term => {\r\n  return async dispatch => {\r\n    const res = await api.get(\r\n      `/data/2.5/weather?q=${term}&APPID=30fa45291c64bdfda54128e6e69b6714&units=metric`\r\n    );\r\n    dispatch({ type: \"FETCH_WEATHER\", payload: res.data });\r\n  };\r\n};\r\n\r\nexport const listDelete = id => {\r\n  return {\r\n    type: \"LIST_DELETE\",\r\n    payload: id\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport HandleCitySearch from \"./HandleCitySearch\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <div>\r\n      <HandleCitySearch />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport reducerIndex from \"./reducers/reducerIndex\";\r\nimport App from \"./components/App\";\r\n\r\nconst store = createStore(reducerIndex, applyMiddleware(thunk));\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.querySelector(\"#root\")\r\n);\r\n"],"sourceRoot":""}